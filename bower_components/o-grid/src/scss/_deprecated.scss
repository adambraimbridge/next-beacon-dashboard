// ---------------------------
// DEPRECATED - remove in v3
// ---------------------------

$o-grid-fixed-layout-useragents: null !default;
$o-grid-fixed-layout-selector: null !default;
$o-grid-is-fixed-desktop: null !default;

@if $o-grid-fixed-layout-useragents {
	@warn "$o-grid-fixed-layout-useragents is deprecated, use $o-grid-useragents-fixed-large instead";
	$o-grid-useragents-fixed-large: $o-grid-fixed-layout-useragents !global;
}

@if $o-grid-fixed-layout-selector {
	@warn "$o-grid-fixed-layout-selector is deprecated, use $o-grid-selector-fixed-large instead";
	$o-grid-selector-fixed-large: $o-grid-fixed-layout-selector !global;
}

@if $o-grid-is-fixed-desktop {
	@warn "$o-grid-is-fixed-desktop is deprecated, use $o-grid-is-fixed-large instead";
	$o-grid-is-fixed-large: $o-grid-is-fixed-desktop !global;
}

// Breakpoints
$o-grid-small-to-medium-break: null !default;
$o-grid-medium-to-large-break: null !default;
$o-grid-large-to-extra-large-break: null !default;

@if $o-grid-small-to-medium-break {
	@warn "$o-grid-small-to-medium-break is deprecated, use $o-grid-small-max-width instead";
	$o-grid-small-max-width: $o-grid-small-to-medium-break !global;
}

@if $o-grid-medium-to-large-break {
	@warn "$o-grid-medium-to-large-break is deprecated, use $o-grid-medium-max-width instead";
	$o-grid-medium-max-width: $o-grid-medium-to-large-break !global;
}

@if $o-grid-large-to-extra-large-break {
	@warn "$o-grid-large-to-extra-large-break is deprecated, use $o-grid-large-max-width instead";
	$o-grid-large-max-width: $o-grid-large-to-extra-large-break !global;
}

// Media query feature
$o-grid-mq-type: null !default;

@if $o-grid-mq-type {
	@warn "$o-grid-mq-type is deprecated, rendering surface width will be used";
} @else {
	$o-grid-mq-type: width !global;
}

// Gutters

$o-grid-responsive-half-gutter: null !default;
$o-grid-default-half-gutter: null !default;
$o-grid-fixed-half-gutter: null !default;

@if $o-grid-responsive-half-gutter {
	@warn "$o-grid-responsive-half-gutter is deprecated, use $o-grid-default-gutter instead";
	$o-grid-default-gutter: $o-grid-responsive-half-gutter !global;
}

@if $o-grid-default-half-gutter {
	@warn "$o-grid-default-half-gutter is deprecated";
} @else {
	$o-grid-default-half-gutter: 1% !global;
}

@if $o-grid-fixed-half-gutter {
	@warn "$o-grid-fixed-half-gutter is deprecated, use $o-grid-small-gutter instead";
	$o-grid-small-gutter: $o-grid-fixed-half-gutter !global;
}

//
// Adds placeholder classes to enable overriding of gutters at a given layout size
//
@mixin _oGridGutterOverrides($layout-size) {
	$suffix: -$layout-size;
	@if ($layout-size == default) {
		$suffix: "";
	}

	%o-grid-no-gutter#{$suffix},
	%o-grid-no-left-gutter#{$suffix} {
		@include oGridRemoveGuttersLeft($layout-size);
	}

	%o-grid-no-gutter#{$suffix},
	%o-grid-no-right-gutter#{$suffix} {
		@include oGridRemoveGuttersRight($layout-size);
	}

	@if (not $o-grid-is-silent) {
		@if ($suffix != "") {
			$suffix: --$layout-size;
		}
		[data-o-grid-colspan].o-grid-remove-gutters#{$suffix},
		[data-o-grid-colspan].o-grid-remove-gutters--left#{$suffix} {
			@include oGridRemoveGuttersLeft($layout-size);
		}

		[data-o-grid-colspan].o-grid-remove-gutters#{$suffix},
		[data-o-grid-colspan].o-grid-remove-gutters--right#{$suffix} {
			@include oGridRemoveGuttersRight($layout-size);
		}
	}
}
